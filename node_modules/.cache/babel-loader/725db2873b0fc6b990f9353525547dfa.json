{"ast":null,"code":"var _jsxFileName = \"/Users/zay/web102_unit7lab/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Card.css\";\nimport more from \"./more.png\";\nimport { Link } from \"react-router-dom\";\nimport { supabase } from \"../config/client\"; // Import supabase\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [upvoteCount, setUpvoteCount] = useState(0);\n  const [commentCount, setCommentCount] = useState(0); // Fetch post data and comments count based on ID from Supabase\n\n  useEffect(() => {\n    const fetchPostAndComments = async () => {\n      try {\n        // Fetch post data\n        const {\n          data: postData,\n          error: postError\n        } = await supabase.from(\"posts\").select(\"upvotes\").eq(\"id\", props.id).single();\n\n        if (postError) {\n          throw postError;\n        }\n\n        setUpvoteCount(postData.upvotes || 0); // Fetch comments associated with the post\n\n        const {\n          data: commentsData,\n          error: commentsError\n        } = await supabase.from(\"comments\").select().eq(\"post_id\", props.id);\n\n        if (commentsError) {\n          throw commentsError;\n        }\n\n        setCommentCount(commentsData.length || 0); // Set comment count\n      } catch (error) {\n        console.error(\"Error fetching post and comments:\", error);\n      }\n    };\n\n    fetchPostAndComments();\n  }, [props.id]); // Run effect whenever the ID parameter changes\n  // Function to format the timestamp into a human-readable date and time\n\n  const formattedDate = timestamp => {\n    if (timestamp && timestamp.seconds) {\n      const postDate = new Date(timestamp.seconds * 1000);\n      const hours = postDate.getHours().toString().padStart(2, '0');\n      const minutes = postDate.getMinutes().toString().padStart(2, '0');\n      return `${hours}:${minutes}`;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"more/\" + props.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moreButton\",\n        alt: \"edit button\",\n        src: more\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `viewPost/${props.id}`,\n      style: {\n        textDecoration: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"datePosted\",\n      children: props.timestamp ? formattedDate(props.timestamp) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"comments\",\n      children: [commentCount, \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upVotes\",\n      children: [upvoteCount, \" Upvotes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"DsQ+z4m2LVFBgprbItaulvDi9Qs=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","more","Link","supabase","Card","props","upvoteCount","setUpvoteCount","commentCount","setCommentCount","fetchPostAndComments","data","postData","error","postError","from","select","eq","id","single","upvotes","commentsData","commentsError","length","console","formattedDate","timestamp","seconds","postDate","Date","hours","getHours","toString","padStart","minutes","getMinutes","textDecoration","title"],"sources":["/Users/zay/web102_unit7lab/client/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Card.css\";\nimport more from \"./more.png\";\nimport { Link } from \"react-router-dom\";\nimport { supabase } from \"../config/client\"; // Import supabase\n\nconst Card = (props) => {\n  const [upvoteCount, setUpvoteCount] = useState(0);\n  const [commentCount, setCommentCount] = useState(0);\n\n  // Fetch post data and comments count based on ID from Supabase\n  useEffect(() => {\n    const fetchPostAndComments = async () => {\n      try {\n        // Fetch post data\n        const { data: postData, error: postError } = await supabase\n          .from(\"posts\")\n          .select(\"upvotes\")\n          .eq(\"id\", props.id)\n          .single();\n        if (postError) {\n          throw postError;\n        }\n        setUpvoteCount(postData.upvotes || 0);\n\n        // Fetch comments associated with the post\n        const { data: commentsData, error: commentsError } = await supabase\n          .from(\"comments\")\n          .select()\n          .eq(\"post_id\", props.id);\n        if (commentsError) {\n          throw commentsError;\n        }\n        setCommentCount(commentsData.length || 0); // Set comment count\n      } catch (error) {\n        console.error(\"Error fetching post and comments:\", error);\n      }\n    };\n\n    fetchPostAndComments();\n  }, [props.id]); // Run effect whenever the ID parameter changes\n\n  // Function to format the timestamp into a human-readable date and time\n  const formattedDate = (timestamp) => {\n    if (timestamp && timestamp.seconds) {\n      const postDate = new Date(timestamp.seconds * 1000);\n      const hours = postDate.getHours().toString().padStart(2, '0');\n      const minutes = postDate.getMinutes().toString().padStart(2, '0');\n      return `${hours}:${minutes}`;\n    }\n    return \"\";\n  };\n\n  return (\n    <div className=\"Card\">\n      <Link to={\"more/\" + props.id}>\n        <img className=\"moreButton\" alt=\"edit button\" src={more} />\n      </Link>\n      <Link to={`viewPost/${props.id}`} style={{ textDecoration: 'none' }}>\n        <h2 className=\"title\">{props.title}</h2>\n      </Link>\n      <p className=\"datePosted\">{props.timestamp ? formattedDate(props.timestamp) : \"\"}</p>\n      <p className=\"comments\">{commentCount} Comments</p>\n      <p className=\"upVotes\">{upvoteCount} Upvotes</p>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}