{"ast":null,"code":"var _jsxFileName = \"/Users/zay/web102_unit7lab/client/src/pages/ReadPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"../config/client\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let {\n          data,\n          error\n        } = await supabase.from(\"posts\").select(\"*\").order(\"datePosted\", {\n          ascending: false\n        }); // Sort by datePosted in descending order\n        // Apply search filter if searchTerm exists\n\n        if (searchTerm) {\n          data = data.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n        }\n\n        if (error) {\n          throw error;\n        }\n\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error.message);\n      }\n    };\n\n    fetchPosts();\n  }, [searchTerm]);\n\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title...\",\n      value: searchTerm,\n      onChange: handleSearchChange,\n      style: {\n        width: '600px',\n        height: '20px',\n        padding: '8px',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        outline: 'none',\n        marginBottom: '50px' // Add margin bottom to create space\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Card, {\n      id: post.id,\n      title: post.title,\n      author: post.author // Assuming 'author' field exists in your Supabase table\n      ,\n      description: post.body // Assuming 'body' field contains description in your Supabase table\n      ,\n      date: post.datePosted,\n      upvoteCount: post.upvotes,\n      commentCount: post.comments ? post.comments.length : 0 // Check if comments array exists before accessing length property\n\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReadPosts, \"EyL2x44/Ps8swZ30p4yRfdl7gBU=\");\n\n_c = ReadPosts;\nexport default ReadPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadPosts\");","map":{"version":3,"names":["React","useState","useEffect","supabase","Card","ReadPosts","posts","setPosts","searchTerm","setSearchTerm","fetchPosts","data","error","from","select","order","ascending","filter","post","title","toLowerCase","includes","console","message","handleSearchChange","event","target","value","width","height","padding","border","borderRadius","outline","marginBottom","map","id","author","body","datePosted","upvotes","comments","length"],"sources":["/Users/zay/web102_unit7lab/client/src/pages/ReadPosts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { supabase } from \"../config/client\";\nimport Card from \"../components/Card\";\n\nconst ReadPosts = () => {\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        let { data, error } = await supabase\n          .from(\"posts\")\n          .select(\"*\")\n          .order(\"datePosted\", { ascending: false }); // Sort by datePosted in descending order\n\n        // Apply search filter if searchTerm exists\n        if (searchTerm) {\n          data = data.filter((post) =>\n            post.title.toLowerCase().includes(searchTerm.toLowerCase())\n          );\n        }\n\n        if (error) {\n          throw error;\n        }\n\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error.message);\n      }\n    };\n\n    fetchPosts();\n  }, [searchTerm]);\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search by title...\"\n        value={searchTerm}\n        onChange={handleSearchChange}\n        style={{\n          width: '600px',\n          height: '20px',\n          padding: '8px',\n          border: '1px solid #ccc',\n          borderRadius: '5px',\n          outline: 'none',\n          marginBottom: '50px' // Add margin bottom to create space\n        }}\n      />\n\n      {posts.map((post) => (\n        <Card\n          key={post.id}\n          id={post.id}\n          title={post.title}\n          author={post.author} // Assuming 'author' field exists in your Supabase table\n          description={post.body} // Assuming 'body' field contains description in your Supabase table\n          date={post.datePosted}\n          upvoteCount={post.upvotes}\n          commentCount={post.comments ? post.comments.length : 0} // Check if comments array exists before accessing length property\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ReadPosts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,YAAY;MAC7B,IAAI;QACF,IAAI;UAAEC,IAAF;UAAQC;QAAR,IAAkB,MAAMT,QAAQ,CACjCU,IADyB,CACpB,OADoB,EAEzBC,MAFyB,CAElB,GAFkB,EAGzBC,KAHyB,CAGnB,YAHmB,EAGL;UAAEC,SAAS,EAAE;QAAb,CAHK,CAA5B,CADE,CAI4C;QAE9C;;QACA,IAAIR,UAAJ,EAAgB;UACdG,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAaC,IAAD,IACjBA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCb,UAAU,CAACY,WAAX,EAAlC,CADK,CAAP;QAGD;;QAED,IAAIR,KAAJ,EAAW;UACT,MAAMA,KAAN;QACD;;QAEDL,QAAQ,CAACI,IAAD,CAAR;MACD,CAlBD,CAkBE,OAAOC,KAAP,EAAc;QACdU,OAAO,CAACV,KAAR,CAAc,uBAAd,EAAuCA,KAAK,CAACW,OAA7C;MACD;IACF,CAtBD;;IAwBAb,UAAU;EACX,CA1BQ,EA0BN,CAACF,UAAD,CA1BM,CAAT;;EA4BA,MAAMgB,kBAAkB,GAAIC,KAAD,IAAW;IACpChB,aAAa,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MAEE,WAAW,EAAC,oBAFd;MAGE,KAAK,EAAEnB,UAHT;MAIE,QAAQ,EAAEgB,kBAJZ;MAKE,KAAK,EAAE;QACLI,KAAK,EAAE,OADF;QAELC,MAAM,EAAE,MAFH;QAGLC,OAAO,EAAE,KAHJ;QAILC,MAAM,EAAE,gBAJH;QAKLC,YAAY,EAAE,KALT;QAMLC,OAAO,EAAE,MANJ;QAOLC,YAAY,EAAE,MAPT,CAOgB;;MAPhB;IALT;MAAA;MAAA;MAAA;IAAA,QADF,EAiBG5B,KAAK,CAAC6B,GAAN,CAAWjB,IAAD,iBACT,QAAC,IAAD;MAEE,EAAE,EAAEA,IAAI,CAACkB,EAFX;MAGE,KAAK,EAAElB,IAAI,CAACC,KAHd;MAIE,MAAM,EAAED,IAAI,CAACmB,MAJf,CAIuB;MAJvB;MAKE,WAAW,EAAEnB,IAAI,CAACoB,IALpB,CAK0B;MAL1B;MAME,IAAI,EAAEpB,IAAI,CAACqB,UANb;MAOE,WAAW,EAAErB,IAAI,CAACsB,OAPpB;MAQE,YAAY,EAAEtB,IAAI,CAACuB,QAAL,GAAgBvB,IAAI,CAACuB,QAAL,CAAcC,MAA9B,GAAuC,CARvD,CAQ0D;;IAR1D,GACOxB,IAAI,CAACkB,EADZ;MAAA;MAAA;MAAA;IAAA,QADD,CAjBH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CApED;;GAAM/B,S;;KAAAA,S;AAsEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}